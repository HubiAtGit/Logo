{
  "hash": "24ed2db11b57d58b1ef0221a99191715",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Logo with Gimmicks\"\nauthor: \"Hubert Baechli\"\ndate: \"04-18-2025\"\n---\n\n\n\n\n\n\n# Logo\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(here(\"LOGO_Functions.R\"))\n```\n:::\n\n\n\n\n\n## Basic Commands\n\n### CLEARSCREEN (CS)\n\nClear the screen and initializing the field\n\n### HIDETURTLE (HT)\n\nDon't show the turtle cursor.\n\n### SHOWTURTLE (ST)\n\nShow the turtle cursor.\n\n### FORWARD (FD)\n\nMove forward *steps*.\n\n### BACK (BK)\n\nMove back *steps*.\n\n### LEFT (LT)\n\nTurn left this many degrees. Negative degrees work too, they'll turn it right.\n\n### RIGHT (RT)\n\nTurn right this many degrees.\n\n### SETHEADING (SH)\n\nTurn to an absolute heading of *degrees*.\n\n### SETPOS (SP)\n\nSet the position to *x, y* coordinates. These are Cartesian, so 0,0 is the middle of the screen.\n\n### HOME\n\nMove back to the home position.\n\n### SETPOSX (SPX)\n\nSet the horizontal position to *x*.\n\n### SETPOSY (SPY)\n\nSet the vertical position to *y*.\n\n## Gimmicks\n\n### SETPATHCOLOR (SPC)\n\nSet the *color* of the path.\n\n### SETTURTLECOLOR (STC)\n\nSet the *color* of the turtle.\n\n### SETNEWCHUNK (SNC)\n\nSet a new chunk ID for the next Logo-Code\n\n### UNDOCHUNK (UNDO)\n\nUndo the last chunk of Logo-Code\n\n### SETSPEED (SPEED)\n\nSet the speed of the turtle.\n\n### REPLOT\n\nReplot the  whole path\n\n### SAVESCREEN (SAVE)\n\nSave the whole path as a Gif-File with the given *name*\n\n### QUITLOGO (QUIT)\n\nQuit the application end remove the Logo environment\n\n# Run Game\n\n## Example from the homepage\n\nwith some fancy shadow and color effects\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_LOGO(\"CS SP [-pi/5] [-Sin(PI/2)/2] sPc [black]\")\nrun_LOGO(\"REPEAT 20 [RepeaT 180 [FD 1 RT 2] RT 18]\")\nrun_LOGO(\"SPEED 100\")\nrun_LOGO(\"Home SpC [gREEN] StC [blue]\")\nrun_LOGO(\"REPEaT 20.1 [rEPEAT 180 [fD 1 RT 2] RT 18]\")\nrun_LOGO(\"UndoChunk\")\nrun_LOGO(\"SpC [blue] StC [green]\")\nrun_LOGO(\"REPEaT 5 [rEPEAT 180 [fD 1 RT 2] RT 72]\")\nrun_LOGO(\"SpC [green] StC [red] rt 18\")\nrun_LOGO(\"REPEaT 5 [rEPEAT 180 [fD 1 RT 2] RT 72]\")\nrun_LOGO(\"SpC [yellow] rt 18\")\nrun_LOGO(\"REPEaT 5 [rEPEAT 180 [fD 1 RT 2] RT 72]\")\nrun_LOGO(\"SpC [red] rt 18 ht\")\nrun_LOGO(\"REPEaT 5 [rEPEAT 360 [fD 0.5 RT 1] RT 72]\")\n```\n:::\n\n\n\n\n### Saved Output\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_LOGO(\"SPEED 1 saVe [Logo01]\")\n```\n:::\n\n\n\n\n![](Logo01.gif)\n\n## Other Exercises\n\nSince `n` is also used as a loop variable in my program, handling many other exercises doesn't pose any issues.\n\n<https://softwareprogramming4kids.com/loops-in-logo/>\n\n### Exercise 1:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_LOGO(\"CS\")\nrun_LOGO(\"REPEAT 80 [FD [N*2] RT 90]\")\nrun_LOGO(\"undo\")\nrun_LOGO(\"REPEAT 80 [FD [N*2^(N/40)] RT 90]\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_LOGO(\"SPEED 1 saVe [Logo02]\")\n```\n:::\n\n\n\n\n![](Logo02.gif)\n\n### Exercise 2:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_LOGO(\"CS REPEAT 50 [ FD [n * 5]  RIGHT 144 ]\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_LOGO(\"SPEED 1 saVe [Logo03]\")\n```\n:::\n\n\n\n\n![](Logo03.gif)\n\n### Exercise 3:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_LOGO(\"CS REPEAT 150 [ FD [n * 2]  RT 91 ]\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrun_LOGO(\"SPEED 1 saVe [Logo04]\")\n```\n:::\n\n\n\n\n![](Logo04.gif)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}